% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_wrappers.R
\name{api_urls}
\alias{api_urls}
\alias{api_player_service_record}
\alias{api_player_match_history}
\alias{api_match_details}
\alias{api_player_csr}
\title{API URLs}
\usage{
api_player_service_record(
  gamertag,
  type = c("multiplayer", "campaign"),
  filter = c("all", "pvp", "social", "ranked", "bots", "custom")
)

api_player_match_history(gamertag, count, offset, mode)

api_match_details(match.id)

api_player_csr(gamertag, season)
}
\arguments{
\item{gamertag}{Character value for the gamertag to view.}

\item{type}{One of either 'multiplayer' or 'campaign'}

\item{filter}{One of \verb{'all', 'pvp', 'social', 'ranked', 'bots', 'custom'} to
limit the results. These only affect data returned for the \code{multiplayer}
type.}

\item{count}{The number of records to return per paginated result. Defaults
to 25, which is also the upper limit.}

\item{offset}{The pagination number to offset by. Starts at 0, and continues
in integer values until no more results are available.}

\item{mode}{One of either 'matchmade' or 'custom'. Defaults to 'matchmade'.}

\item{match.id}{The 32-character match identifier.}

\item{season}{Numeric value for the season to view.}

\item{input}{Character value, one of 'mnk', 'controller', or 'crossplay' for the specific input type.}

\item{queue}{Character value, one of 'open', or 'solo-duo' for the queuing method.}
}
\description{
These functions return the formatted API URL for the corresponding Halodotapi
endpoint. They do NOT perform queries, instead returning a valid,
authenticated URL ready to be requested.
}
\details{
Note that solo-duo queue only has input values for 'mnk' and 'controller',
whereas open queue only has the 'crossplay' input value.
}
